class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        List<Integer> res= new ArrayList<>();
        int[] dp= new int[nums.length];
        int[] arr = new int[nums.length];
        Arrays.sort(nums);
        Arrays.fill(dp,1);
        int maximum = 1, index = 0;
        arr[0] =- 1;
        for(int i = 1 ; i < nums.length ; i++){
            arr[i] =- 1;
            for(int j = 0 ; j < i ; j++){
                if(nums[i] % nums[j] == 0){
                    if(dp[i] < dp[j] + 1){
                        dp[i] = dp[j] + 1;
                        arr[i] = j;
                    }
                }
            }
            if(dp[i] > maximum){
                maximum = dp[i];
                index = i;
            }
        }
        while(index != -1){   
            res.add(nums[index]);
            index = arr[index];
        }
        return res;
    }
}